# -*-Makefile-*-
#===============================================================================================
# Makerules for Kernel and Module. Target Processor: AVR
#===============================================================================================
###############################################################
# PROCESSOR SPECIFIC CONFIGURATION
###############################################################
TRG = avr-
DEFS += -DAVR_MCU -DLLITTLE_ENDIAN -DSUPPORTS_PACKED
MCU = atmega103
MCUFLAG += -mmcu=$(MCU)

VPATH  += $(ROOTDIR)/drivers/uart
VPATH += $(ROOTDIR)/drivers/i2c
VPATH += $(ROOTDIR)/processor/$(PROCESSOR)

INCDIR += -I$(ROOTDIR)/drivers/uart/include
INCDIR += -I$(ROOTDIR)/drivers/i2c/include
INCDIR += -I$(ROOTDIR)/processor/$(PROCESSOR)/include
INCDIR += -I$(ROOTDIR)/drivers/adc/include

# Kernel Build Options
KER_SRCS += crc.c timer.c
KER_ASM_SRCS += sos_fnptr_call.S sys_jmptable.S

# Uart Sources
UART_DRV_SRCS += uart_system.c uart.c uart_hal.c
UART_DRV_ASM_SRCS += uart_driver.S





###############################################################
# DEBUG OPTIONS
###############################################################
ifeq ($(CC_DEBUG),)
  CC_DEBUG=-g
endif
ifeq ($(AS_DEBUG),)
  AS_DEBUG=-Wa,-gstabs
endif

##############################################################
#  SYS JUMPTABLE SETUP
##############################################################
ifeq ($(MODE),)
SYS_JUMP_TBL_ADDR = 0x60
DEFS += -DSYS_JUMP_TBL_START=$(SYS_JUMP_TBL_ADDR)
DEFS += -DSYS_JUMP_TBL_SIZE=4
endif


###############################################################
# MEMORY PROTECTION OPTIONS
###############################################################
ifeq ($(MODE), sfi)
KER_SRCS += sfi_jumptable.c
#CFLAGS += -ffixed-r2 -ffixed-r3 -ffixed-r4
LDSCRIPT = -Wl,-T $(ROOTDIR)/processor/avr/sos_sfi_avr5.x
else
LDSCRIPT = -Wl,-T $(ROOTDIR)/processor/avr/sos_avr5.x
endif

###############################################################
# BOOT LOADER SETUP
###############################################################
BLS_START = -Wl,--section-start=.sos_bls=0x1fc00 


CFLAGS += -Os $(CC_DEBUG) -fshort-enums -fpack-struct -Wno-cast-qual -Wall -Wa,-adhlmsn=$(notdir $(<:.c=.lst))
SFLAGS += -Wa,$(MCUFLAG),$(AS_DEBUG),-ahlms=$(notdir $(<:.S=.lst)) $(DEFS)
LDFLAGS += -Wl,-Map=$(PROJ).map,--cref $(SFIJMPTBL_START) $(BLS_START) $(LDSCRIPT)






avr: $(PROJ).elf $(PROJ).elf.lst
