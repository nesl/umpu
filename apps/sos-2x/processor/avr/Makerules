# -*-Makefile-*-
#===============================================================================================
# Makerules for Kernel and Module. Target Processor: AVR
#===============================================================================================
###############################################################
# PROCESSOR SPECIFIC CONFIGURATION
###############################################################
TRG = avr-
DEFS += -DAVR_MCU -DLLITTLE_ENDIAN -DSUPPORTS_PACKED
MCU = atmega103
MCUFLAG += -mmcu=$(MCU)

VPATH  += $(ROOTDIR)/drivers/uart
VPATH += $(ROOTDIR)/drivers/i2c
VPATH += $(ROOTDIR)/processor/$(PROCESSOR)

INCDIR += -I$(ROOTDIR)/drivers/uart/include
INCDIR += -I$(ROOTDIR)/drivers/i2c/include
INCDIR += -I$(ROOTDIR)/processor/$(PROCESSOR)/include
INCDIR += -I$(ROOTDIR)/drivers/adc/include

###############################################################
# DEBUG OPTIONS
###############################################################
ifeq ($(CC_DEBUG),)
  CC_DEBUG=-g
endif
ifeq ($(AS_DEBUG),)
  AS_DEBUG=-Wa,-gstabs
endif
#CC_DEBUG=-gstabs
#AS_DEBUG=--gstabs
#CC_DEBUG = -gstabs+
#AS_DEBUG = --gstabs+
#CC_DEBUG = -gdwarf-2 -feliminate-dwarf2-dup
#AS_DEBUG = --gdwarf2

##############################################################
#  SYS JUMPTABLE SETUP
##############################################################
ifeq ($(MODE),)
SYS_JUMP_TBL_ADDR = 0x60
DEFS += -DSYS_JUMP_TBL_START=$(SYS_JUMP_TBL_ADDR)
DEFS += -DSYS_JUMP_TBL_SIZE=4
endif

#===============================================================================================
# KERNEL BUILD OPTIONS
#===============================================================================================
ifeq ($(BUILD),_SOS_KERNEL_)
BLS_START = -Wl,--section-start=.sos_bls=0x1fc00 
SRCS += uart_hal.c uart.c uart_system.c 
SRCS += crc.c timer.c
ASMSRCS += sos_fnptr_call.S
ASMSRCS += sys_jmptable.S

###############################################################
# MEMORY PROTECTION OPTIONS
###############################################################
ifeq ($(MODE), sfi)
SRCS += sfi_jumptable.c
CFLAGS += -ffixed-r2 -ffixed-r3 -ffixed-r4
LDSCRIPT = -Wl,-T $(ROOTDIR)/processor/avr/sos_sfi_avr5.x
else
LDSCRIPT = -Wl,-T $(ROOTDIR)/processor/avr/sos_avr5.x
endif


CFLAGS += -Os $(CC_DEBUG) -fshort-enums -fpack-struct -Wno-cast-qual -Wall -Wa,-adhlmsn=$(notdir $(<:.c=.lst))
SFLAGS += -Wa,$(MCUFLAG),$(AS_DEBUG),-ahlms=$(notdir $(<:.S=.lst)) $(DEFS)
LDFLAGS += -Wl,-Map=$(PROJ).map,--cref $(SFIJMPTBL_START) $(BLS_START) $(LDSCRIPT)
endif # _SOS_KERNEL_


#===============================================================================================
# MODULE OPTIONS
#===============================================================================================
ifeq ($(BUILD),_MODULE_)

CFLAGS += -Os -fno-unit-at-a-time -fshort-enums -fpack-struct -mno-tablejump -Wall -Wa,-adhlmsn=$(notdir $(<:.c=.lst)) -Wa,-mno-wrap 
LDFLAGS += -Wl,-r,-i,--unresolved-symbols=ignore-in-object-files 

###############################################################
# MEMORY PROTECTION OPTIONS
###############################################################
#ifeq ($(MODE),sfi)
#CFLAGS += -ffixed-r26 -ffixed-r27
#CFLAGS += -ffixed-r2
#endif

LDFLAGS += -Wl,-T $(ROOTDIR)/processor/avr/mod.x -Wl,-Map=$(PROJ).map,--cref -nostartfiles -nodefaultlibs -nostdlib -lgcc -lc
SFLAGS += $(STACK_START) -Wa,$(MCUFLAG),$(AS_DEBUG),-ahlms=$(notdir $(<:.S=.lst))
endif # _MODULE_




avr: $(PROJ).elf $(PROJ).elf.lst $(PROJ).srec $(OBJS) $(PROJ).ihex $(PROJ).vhd




