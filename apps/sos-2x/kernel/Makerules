# -*-Makefile-*-
#
# Generel Makerules for all builds
#

VPATH += $(ROOTDIR)/kernel
VPATH += $(ROOTDIR)/modules

INCDIR += -I$(ROOTDIR)/kernel/include
INCDIR += -I$(ROOTDIR)/modules
INCDIR += -I$(ROOTDIR)/modules/include
INCDIR += -I$(ROOTDIR)/modules/interfaces
INCDIR += -I$(ROOTDIR)/drivers/include
INCDIR += -I$(ROOTDIR)/drivers/i2c/include

# platform must be specified first
include $(ROOTDIR)/platform/$(PLATFORM)/Makerules

#DEFS += -D'DEBUG(arg...)='
#DEFS += -D'DEBUG_SHORT(arg...)='

CFLAGS += $(MCUFLAG) -Werror -Wall $(DEFS)

LDFLAGS += $(MCUFLAG)

SFLAGS += $(MCUFLAG)

CC  = $(TRG)gcc

AS     = $(TRG)gcc 

OBJCOPY = $(TRG)objcopy

OBJDUMP = $(TRG)objdump

SIZE = $(TRG)size -A

HOST = $(shell uname -s)

####
# Basic node configuration informaton
# These values can be overriden an the command line
####

ifneq ($(ADDRESS),)
DEFS += -D'NODE_ADDR=$(ADDRESS)'
else
ADDRESS=1
DEFS += -D'NODE_ADDR=$(ADDRESS)'
endif

ifneq ($(PANID),)
DEFS += -D'VMAC_PANID=$(PANID)'
else
PANID=0x2420
DEFS += -D'VMAC_PANID=$(PANID)'
endif

ifneq ($(ACK_ENABLED),)
DEFS += -D'VMAC_ACK_ENABLED=$(ACK_ENABLED)'
endif

ifneq ($(UART_ADDRESS),)
DEFS += -D'UART_ADDR=$(UART_ADDRESS)'
endif

ifneq ($(I2C_ADDRESS),)
DEFS += -D'I2C_ADDR=$(I2C_ADDRESS)'
endif

ifneq ($(X),)
DEFS += -D'NODE_X=$(X)'
endif

ifneq ($(Y),)
DEFS += -D'NODE_Y=$(Y)'
endif

ifneq ($(Z),)
DEFS += -D'NODE_Z=$(Z)'
endif

ifneq ($(LOC_UNIT),)
DEFS += -D'NODE_LOC_UNIT=$(LOC_UNIT)'
endif

ifneq ($(SOS_GROUP),)
DEFS += -D'NODE_GROUP_ID=$(SOS_GROUP)'
endif

ifneq ($(TX_POWER),)
DEFS += -D'RADIO_XMIT_POWER=$(TX_POWER)'
endif

ifneq ($(CHANNEL),)
DEFS += -D'RADIO_CHANNEL=$(CHANNEL)'
endif

ifneq ($(GPS_X_DIR),)
DEFS += -D'NODE_GPS_X_DIR=$(GPS_X_DIR)'
endif

ifneq ($(GPS_X_DEG),)
DEFS += -D'NODE_GPS_X_DEG=$(GPS_X_DEG)'
endif

ifneq ($(GPS_X_MIN),)
DEFS += -D'NODE_GPS_X_MIN=$(GPS_X_MIN)'
endif

ifneq ($(GPS_X_SEC),)
DEFS += -D'NODE_GPS_X_SEC=$(GPS_X_SEC)'
endif

ifneq ($(GPS_Y_DIR),)
DEFS += -D'NODE_GPS_Y_DIR=$(GPS_Y_DIR)'
endif

ifneq ($(GPS_Y_DEG),)
DEFS += -D'NODE_GPS_Y_DEG=$(GPS_Y_DEG)'
endif

ifneq ($(GPS_Y_MIN),)
DEFS += -D'NODE_GPS_Y_MIN=$(GPS_Y_MIN)'
endif

ifneq ($(GPS_Y_SEC),)
DEFS += -D'NODE_GPS_Y_SEC=$(GPS_Y_SEC)'
endif

ifneq ($(GPS_Z_UNIT),)
DEFS += -D'NODE_GPS_Z_UNIT=$(GPS_Z_UNIT)'
endif

ifneq ($(GPS_Z),)
DEFS += -D'NODE_GPS_Z=$(GPS_Z)'
endif

ifneq ($(MAC),)
DEFS += -D'MAC_ADDR=$(MAC)'
endif

####
# A few rule prototypes
####

build_info:
	@echo ""
	@echo "PROJ = $(PROJ)"
	@echo "PLATFORM = $(PLATFORM)"
	@echo "PROCESSOR = $(PROCESSOR)"
	@echo "SB = $(SB)"
	@echo ""
	@echo "SRCS_FIRST = $(SRCS_FIRST)"
	@echo ""
	@echo "SRCS = $(SRCS)"
	@echo ""
	@echo "ASMSRCS = $(ASMSRCS)"
	@echo
	@echo "OBJS = $(OBJS)"
	@echo ""
	@echo "VPATH = $(VPATH)"
	@echo ""
	@echo "INCDIR = $(INCDIR)"
	@echo ""
	@echo "CFLAGS = $(CFLAGS)"
	@echo ""

%.i : %.c
	$(CC) -E $(CFLAGS) $(INCDIR) $< -o $@

%.s : %.c
	$(CC) -c $(CFLAGS) $(INCDIR) $< -o $@

%.o : %.c
	$(CC) -c $(CFLAGS) $(INCDIR) $< -o $@

%.o : %.s
	$(AS) -c $(INCDIR) $(SFLAGS) $<

%.o : %.S
	$(AS) -c $(SFLAGS) $(INCDIR) $< -o $@

%.elf: $(OBJS)
	$(CC) $(OBJS) $(LIBS) $(LDFLAGS) -o $@
	$(SIZE) -A $@

%.elf.lst: %.elf
	$(OBJDUMP) -h -S $< > $@

%.srec : %.elf
	$(OBJCOPY) -j .text -O srec -R .eeprom $< $@

%.ihex : %.elf
	$(OBJCOPY) -j .text -O ihex -R .eeprom $< $@

%.cof : %.elf
	$(OBJCOPY) --debugging -O coff-ext-avr \
	--change-section-address .data-0x800000 \
	--change-section-address .bss-0x800000 \
	--change-section-address .noinit-0x800000 \
	--change-section-address .eeprom-0x810000 \
	$< $@

%.od: %.elf
	$(OBJDUMP) -zhD $< > $@

%.srec.out.$(ADDRESS): %.srec
	$(ROOTDIR)/tools/utils/set-mote-id $< $@ 0x$(ADDRESS)

%.sos : %.elf
	$(OBJCOPY) -j .text -O binary -R .eeprom $< $@
	$(ROOTDIR)/tools/utils/verify_module_header.pl $@


%.exe: $(OBJS)
	$(CC) $(OBJS) $(LIBS) $(LDFLAGS) -o $@

