# -*-Makefile-*-
#
# Generel Makerules for Kernel image
#

PLATLIST = mica2
DEFAULT_PLAT = mica2
PLATGOALS = $(filter $(PLATLIST), $(MAKECMDGOALS))

ifeq ($(PLATFORM),)
PLATFORM = $(filter $(PLATLIST), $(PLATGOALS))
endif

ifeq ($(PLATFORM),)
PLATFORM = $(DEFAULT_PLAT)
endif

################################################
# BUILD CONFIGURATIONS
################################################
# Kernel Build Definitions
KER_DEFS += -D_SOS_KERNEL_
KER_OBJS += $(KER_SRCS:.c=.o) 
KER_ASM_OBJS += $(KER_ASM_SRCS:.S=.o)

# UART Driver Build Definitions
UART_DRV_DEFS +=  -D_MODULE_ -D_UART_DRIVER_
UART_DRV_OBJS += $(UART_DRV_SRCS:.c=.o)
UART_DRV_ASM_OBJS += $(UART_DRV_ASM_SRCS:.S=.o)

OBJS += $(KER_OBJS) $(KER_ASM_OBJS) $(UART_DRV_OBJS) $(UART_DRV_ASM_OBJS)

##################################################
# MEMORY PROTECTION OPTIONS
#################################################
ifeq ($(MODE), sfi)
DEFS += -DSOS_SFI
KER_SRCS += memmap.c
ifeq ($(DOMS),2)
DEFS += -DSFI_DOMS_2
else
DEFS += -DSFI_DOMS_8
endif
endif

##################################################
# MEMORY PROTECTION OPTIONS
#################################################
ifeq ($(EVAL), on)
DEFS += -DUMPU_EVAL
endif

#################################################
# KERNEL SOURCES AND OBJECTS
#################################################
KER_SRCS += $(PROJ).c malloc.c
KER_SRCS += hardware.c main.c
KER_SRCS += sched.c message.c message_queue.c message_net.c
KER_SRCS += fntable.c
KER_SRCS += sos_timer.c monitor.c
KER_SRCS += sos_list.c sos_info.c 
KER_SRCS += random.c
KER_SRCS += sos_logging.c




####
# Make rules
####
all:
	@echo Specify build platform {mica2}


ifneq ($(PLATFORM),)
include $(ROOTDIR)/kernel/Makerules
endif



$(PLATFORM): $(PROCESSOR)


install: $(PLATFORM)_install

 
clean:
	rm -f *.o *.srec *.ihex *.elf *.lst $(PROJ).map $(PROJ).exe
	rm -f $(PROJ).exe.out.* $(PROJ).od $(PROJ).srec.out.* .build.tmp
	rm -f $(PROJ).bd $(PROJ).bin.out xflash.log
	rm -f *.i *.check
	rm -f sfi_jumptable_proc.S	

